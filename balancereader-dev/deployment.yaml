apiVersion: apps/v1
kind: Deployment
metadata: # kpt-merge: example/base-app
  name: balancereader
  namespace: balancereader-dev
  labels:
    app: balancereader
  annotations:
    internal.kpt.dev/upstream-identifier: apps|Deployment|example|base-app
spec:
  selector:
    matchLabels:
      app: balancereader
  template:
    metadata:
      labels:
        app: balancereader
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: primary
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/bank-of-anthos-ci/balancereader:v0.5.6
        volumeMounts:
        - name: keys
          mountPath: /tmp/.ssh
          readOnly: true
        - mountPath: /tmp
          name: tmp
        ports:
        - name: http-server
          containerPort: 8080
        env:
        - name: VERSION
          value: v0.5.6
        - name: PORT
          value: "8080"
        - name: ENABLE_TRACING
          value: "false"
        - name: ENABLE_METRICS
          value: "false"
        - name: POLL_MS
          value: "100"
        - name: CACHE_SIZE
          value: "1000000"
        # tell Java to obey container memory limits
        - name: JVM_OPTS
          value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xms256m -Xmx512m
        # Valid levels are debug, info, warning, error, critical. If no valid level is set, gunicorn will default to info.
        - name: LOG_LEVEL
          value: info
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: environment-config
        - configMapRef:
            name: ledger-db-config
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthy
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 5
          timeoutSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      # droot: should this be part of the base-app ?
      - name: keys
        secret:
          secretName: jwt-key
          items:
          - key: jwtRS256.key.pub
            path: publickey
            # base-app exposes only public key by default
            #          - key: jwtRS256.key
            #            path: privatekey
      - emptyDir: {}
        name: tmp
